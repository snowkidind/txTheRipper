# [system]
# This is the path to your nodeJS implementation.  Detect with `which node`
EXEC_NODE=/your/path/to/node

# The path to the directory that ripper.js lives in
BASEPATH=/home/user/txRipper/

# The sync operation requires a direct, preferably same machine connection with a node
# the blockchain ID your node is - Mainnet = 1 https://chainlist.org/
RPC_NODE=http://192.168.1.104:8545
RPC_NODE_WS=http://192.168.1.104:8545
CHAIN_ID=1

# [Logging]
# Log levels: 1 standard operation, 2: debug, 3: verbose, 4: objects
LOG_LEVEL=4
LOG_TO_FILE=true
LOG_FILE_LOCATION=/base/path/txTheRipper/derived/application/log.txt

# [Utilities]
# To use the "popular wallets" utilities add your etherscan api key here.
# In order to not get banned they implement their own rate limiter which 
# keeps the app running smoother than leaning on the etherscan 5 second 
# rate limit. Increase with caution
ETHERSCAN_API_KEY=YOURETHERSCANAPIKEYHERE
ETHERSCAN_REQ_RATE=2

# [Database Settings]
DB_USER=dbUser
DB_HOST=localhost
DB_NAME=dbName
DB_PASS=dbUserPassword
REDIS_URL=redis://127.0.0.1:6379

# [Application]
# This is the number of confirmations that ripper should stay behind a node. 
# In order to prevent reorgs from corrupting the data, keep this back about 20 blocks
CONFIRMATIONS=20

# [Memory and CPU Usage]

# This setting can be set to false in order to use a lower ram footprint, but it increases disk writes
OPTIMIZE_DISK_WRITES=true

# Number of blocks to sync before writing to JSON file. this is not a full db commit but 
# can be adjusted to fit the resources available/used on the given machine
# Nvme? Higher disk usage ok = More commits = Less Memory used
COMMIT_EVERYN_BLOCKS=500

# number of byts a JSON Batch file may have 
#    This value also is about the same size the sql file generated will be
# Recommended starting point here is 50 MB: 50000000
JSON_TX_FILE_MAX=50000000

# when a websocket is closed wait this many seconds until attempting to reconnect
WS_RECONNECT_TIMEOUT=5

# Number of separate processes to fire while consuming cpu intensive tasks
# can set USE_MULTI_THREADS=false when you want to use less CPU resources
USE_MULTI_THREADS=true
MULTI_THREADS=4

# To not use an index cache turn this on. Just leave commented out unless you have other purposes
# INDEX_CACHE_DISABLE=true

# To not install regular DB indexes, To render the entire databse unusable, uncomment this
# DONT_INDEX=true