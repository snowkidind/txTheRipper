# [system]

# This is the path to your node implementation.  Detect with `which node`
EXEC_NODE=/your/path/to/node

# The path to the directory that ripper.js lives in
BASEPATH=/home/user/txRipper/

# The sync operation requires a direct, preferably same machine connection with a node
# the blockchain ID your node is - Mainnet = 1 https://chainlist.org/
RPC_NODE=http://192.168.1.104:8545
CHAIN_ID=1

# [Utilities]
# To use the "popular wallets" utilities add your etherscan api key here.
# In order to not get banned they implement their own rate limiter which 
# keeps the app running smoother than leaning on the etherscan 5 second 
# rate limit. Increase with caution
ETHERSCAN_API_KEY=YOURETHERSCANAPIKEYHERE
ETHERSCAN_REQ_RATE=2

# [Database Settings]

DB_USER=dbUser
DB_HOST=localhost
DB_NAME=dbName
DB_PASS=dbUserPassword
REDIS_URL=redis://127.0.0.1:6379

# [Logging]
# Log levels: 1 standard operation, 2: ddebug, 3: verbose, 4: objects
LOG_LEVEL=4
# logs to derived/application/log true or false or comment out
LOG_TO_FILE=false 

# [Application]

# This is the number of confirmations that ripper should stay behind a node. 
# In order to prevent reorgs from corrupting the data, keep this back about 20 blocks
CONFIRMATIONS=20

# [Memory Usage]
# Number of blocks to sync before writing to JSON file. this is not a full db commit but 
# can be adjusted to fit the resources available/used on the given machine
# Nvme? Higher disk usage ok = More commits = Less Memory used
COMMIT_EVERYN_BLOCKS=500

# number of byts a JSON Batch file may have 
#    This value also is about the same size the sql file generated will be
# Recommended starting point here is 300 MB: 300000000
JSON_TX_FILE_MAX=50000000

# Bangkok time zone
UTC_TZ_OFFSET=7
